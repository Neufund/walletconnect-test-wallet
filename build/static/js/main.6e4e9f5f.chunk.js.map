{"version":3,"sources":["styles.ts","components/Loader.tsx","components/Button.tsx","components/Card.tsx","components/Input.tsx","components/Blockie.tsx","helpers/chains.ts","helpers/utilities.ts","components/Header.tsx","helpers/store.ts","components/Column.tsx","components/PeerMeta.tsx","components/DisplayRequest.tsx","components/RequestButton.tsx","components/ClickOutside.tsx","components/Dropdown.tsx","components/AccountDetails.tsx","components/QRCodeScanner.tsx","helpers/wallet.ts","helpers/api.ts","App.tsx","index.tsx"],"names":["colors","white","black","dark","grey","darkGrey","lightGrey","blue","lightBlue","yellow","orange","green","pink","red","purple","background","fonts","tiny","small","medium","large","h1","h2","h3","h4","h5","h6","normal","semibold","bold","extrabold","transitions","shadows","responsive","min","max","globalStyle","OpenSans","load","Object","styled_components_browser_esm","templateObject_1","tslib_es6","SLoader","div","templateObject_2","_a","size","color","Loader","props","react","defaultProps","components_Loader","SIcon","Button_templateObject_1","SHoverLayer","Button_templateObject_2","SButton","button","templateObject_3","outline","icon","left","disabled","Button","type","fetching","components_Button","SCard","Card_templateObject_1","maxWidth","Card","children","components_Card","SInput","input","Input_templateObject_1","components_Input","SBlockieWrapper","Blockie_templateObject_1","Blockie","seed","address","toLowerCase","imgUrl","window","blockies","create","toDataURL","src","alt","components_Blockie","chains","name","short_name","chain","network","chain_id","network_id","rpc_url","ellipseAddress","width","slice","getChainData","chainId","chainData","filter","Error","API_KEY","NODE_ENV","PUBLIC_URL","REACT_APP_VERSION","REACT_APP_INFURA_PROJECT_ID","includes","rpcUrl","replace","store","SHeader","Header_templateObject_1","SActiveAccount","Header_templateObject_2","SActiveChain","Header_templateObject_3","SAddress","p","templateObject_4","connected","SBlockie","templateObject_5","SDisconnect","templateObject_6","components_Header","killSession","activeChain","onClick","SColumn","Column_templateObject_1","components_Column","PeerMeta_SIcon","img","PeerMeta_templateObject_1","SCenter","PeerMeta_templateObject_2","SName","PeerMeta_templateObject_3","components_PeerMeta","peerMeta","icons","description","url","SRequestValues","DisplayRequest_templateObject_1","SConnectedPeer","DisplayRequest_templateObject_2","SActions","DisplayRequest_templateObject_3","components_DisplayRequest","_super","DisplayRequest","prototype","render","this","displayRequest","approveRequest","rejectRequest","params","label","value","method","concat","from","to","gas","utils_lib","gasLimit","gasPrice","nonce","data","JSON","stringify","map","param","key","SRequestButton","RequestButton_templateObject_1","components_RequestButton","components_ClickOutside","ClickOutside","_this","apply","arguments","isTouch","handle","event","onClickOutside","element","contains","target","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","ref","c","propTypes","prop_types","isRequired","SDropdown","Dropdown_templateObject_1","monospace","SRow","Dropdown_templateObject_2","selected","show","SAbsolute","Dropdown_templateObject_3","components_Dropdown","Dropdown","state","optionsDict","otherKeys","parseKeys","targetKey","options","Array","isArray","forEach","option","optionKey","push","keys","toggleDropdown","setState","onChange","componentDidUpdate","prevProps","id","displayKey","_b","length","otherKey","idx","SSection","AccountDetails_templateObject_1","AccountDetails_SBlockie","AccountDetails_templateObject_2","SAddressDropdownWrapper","AccountDetails_templateObject_3","components_AccountDetails","w","d","e","g","activeIndex","accounts","updateAddress","updateChain","windowWidth","documentElement","getElementsByTagName","x","innerWidth","clientWidth","y","innerHeight","clientHeight","ellipseLength","Math","floor","accountsMap","addr","index","display_address","SQRCodeScannerContainer","QRCodeScanner_templateObject_1","SQRCodeScannerWrapper","QRCodeScanner_templateObject_2","SCloseButton","QRCodeScanner_templateObject_3","SFirstLine","QRCodeScanner_templateObject_4","SSecondLine","QRCodeScanner_templateObject_5","components_QRCodeScanner","QRCodeScanner","delay","stopRecording","sent","handleScan","onValidate","result","error","onScan","handleError","onError","onClose","error_1","react_qr_reader_lib","style","localStorage","setLocal","jsonData","setItem","getLocal","raw","getItem","parse","standardPath","MNEMONIC_KEY","wallet_wallet","getWallet","getMnemonic","entropy","mnemonic","ethers_min","randomBytes","HDNode","entropyToMnemonic","createWallet","path","generatePath","fromMnemonic","updateWallet","provider","JsonRpcProvider","connect","sendTransaction","transaction","console","hash","signTransaction","sign","signMessage","SigningKey","privateKey","signDigest","arrayify","sigParams","joinSignature","signPersonalMessage","message","isHexString","api","axios_default","a","baseURL","timeout","headers","Accept","Content-Type","apiGetCustomRequest","customRpc","undefined","Promise","post","response","SContainer","App_templateObject_1","SVersionNumber","App_templateObject_2","SContent","App_templateObject_3","STitle","App_templateObject_4","App_SActions","App_templateObject_5","SActionsColumn","App_templateObject_6","App_SButton","templateObject_7","App_SInput","templateObject_8","App_SConnectedPeer","templateObject_9","App_SRequestButton","templateObject_10","TEST_ACCOUNTS","count","wallet","i","getMultipleAccounts","INITIAL_STATE","loading","scanner","walletConnector","uri","ssl","requests","results","signingMethods","src_App","App","call","initWallet","local","session","lib_default","indexOf","subscribeToEvents","initWalletConnect","createSession","approveSession","rejectSession","resetApp","on","payload","log","then","catch","updateSession","sessionParams","_chainId","_activeIndex","Number","toggleScanner","onQRCodeValidate","res","onQRCodeScan","onURIPaste","onQRCodeError","onQRCodeClose","openRequest","request","closeRequest","filteredRequests","errorMsg","_c","dataToSign","addressRequested","error_2","placeholder","GlobalStyle","src_templateObject_1","react_dom","getElementById"],"mappings":"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","file":"static/js/main.6e4e9f5f.chunk.js","sourcesContent":["export const colors = {\n  white: \"255, 255, 255\",\n  black: \"0, 0, 0\",\n  dark: \"12, 12, 13\",\n  grey: \"169, 169, 188\",\n  darkGrey: \"113, 119, 138\",\n  lightGrey: \"212, 212, 212\",\n  blue: \"101, 127, 230\",\n  lightBlue: \"64, 153, 255\",\n  yellow: \"250, 188, 45\",\n  orange: \"246, 133, 27\",\n  green: \"84, 209, 146\",\n  pink: \"255, 51, 102\",\n  red: \"214, 75, 71\",\n  purple: \"110, 107, 233\",\n  background: \"40, 44, 52\"\n};\n\nexport const fonts = {\n  size: {\n    tiny: \"10px\",\n    small: \"14px\",\n    medium: \"16px\",\n    large: \"18px\",\n    h1: \"60px\",\n    h2: \"50px\",\n    h3: \"40px\",\n    h4: \"32px\",\n    h5: \"24px\",\n    h6: \"20px\"\n  },\n  weight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800\n  },\n  family: {\n    OpenSans: '\"Open Sans\", sans-serif'\n  }\n};\n\nexport const transitions = {\n  short: \"all 0.1s ease-in-out\",\n  base: \"all 0.2s ease-in-out\",\n  long: \"all 0.3s ease-in-out\",\n  button: \"all 0.15s ease-in-out\"\n};\n\nexport const shadows = {\n  soft:\n    \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n  medium:\n    \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\n  hard:\n    \"0px 2px 6px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(50,50,93,0.02), -1px 2px 10px 0 rgba(59, 59, 92, 0.15)\",\n  big:\n    \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\n  hover:\n    \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\"\n};\n\nexport const responsive = {\n  xs: {\n    min: \"min-width: 467px\",\n    max: \"max-width: 468px\"\n  },\n  sm: {\n    min: \"min-width: 639px\",\n    max: \"max-width: 640px\"\n  },\n  md: {\n    min: \"min-width: 959px\",\n    max: \"max-width: 960px\"\n  },\n  lg: {\n    min: \"min-width: 1023px\",\n    max: \"max-width: 1024px\"\n  },\n  xl: {\n    min: \"min-width: 1399px\",\n    max: \"max-width: 1400px\"\n  }\n};\n\nexport const globalStyle = `\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,500,600,700,800');\n\n  html, body, #root {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: ${fonts.family.OpenSans};\n    font-style: normal;\n    font-stretch: normal;\n    font-weight: ${fonts.weight.normal};\n    font-size: ${fonts.size.medium};\n    background-color: rgb(${colors.background});\n    color: rgb(${colors.white});\n    overflow-y:auto;\n    text-rendering: optimizeLegibility;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \t-webkit-text-size-adjust: 100%;\n    -webkit-overflow-scrolling: touch;\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;  \n  }\n\n  button {\n    border-style: none;\n    line-height: 1em;\n    background-image: none;\n    outline: 0;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  [tabindex] {\n    outline: none;\n    width: 100%;\n    height: 100%;\n  }\n\n  a, p, h1, h2, h3, h4, h5, h6 {\n  \ttext-decoration: none;\n  \tmargin: 0;\n    padding: 0;\n    margin: 0.7em 0;\n  }\n\n  h1 {\n    font-size: ${fonts.size.h1}\n  }\n  h2 {\n    font-size: ${fonts.size.h2}\n  }\n  h3 {\n    font-size: ${fonts.size.h3}\n  }\n  h4 {\n    font-size: ${fonts.size.h4}\n  }\n  h5 {\n    font-size: ${fonts.size.h5}\n  }\n  h6 {\n    font-size: ${fonts.size.h6}\n  }\n\n  a {\n    background-color: transparent;\n    -webkit-text-decoration-skip: objects;  \n    text-decoration: none;\n    color: inherit;\n    outline: none;\n  }\n\n  b,\n  strong {\n    font-weight: inherit;\n    font-weight: bolder;\n  }\n\n  ul, li {\n  \tlist-style: none;\n  \tmargin: 0;\n  \tpadding: 0;\n  }\n\n  * {\n    box-sizing: border-box !important;\n  }\n\n\n  input {\n    -webkit-appearance: none;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n  }\n\n  input[type=\"color\"],\n  input[type=\"date\"],\n  input[type=\"datetime\"],\n  input[type=\"datetime-local\"],\n  input[type=\"email\"],\n  input[type=\"month\"],\n  input[type=\"number\"],\n  input[type=\"password\"],\n  input[type=\"search\"],\n  input[type=\"tel\"],\n  input[type=\"text\"],\n  input[type=\"time\"],\n  input[type=\"url\"],\n  input[type=\"week\"],\n  select:focus,\n  textarea {\n    font-size: 16px;\n  }\n`;\n","import * as React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { fonts, colors } from \"../styles\";\n\ninterface ILoaderStyleProps {\n  size: number;\n  color: string;\n  background: string;\n}\n\nconst load = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SLoader = styled.div<ILoaderStyleProps>`\n  position: relative;\n  font-size: ${fonts.size.tiny};\n  margin: 0 auto;\n  text-indent: -9999em;\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  border-radius: 50%;\n  background: ${({ color }) => `rgb(${colors[color]})`};\n  background: ${({ background, color }) =>\n    `linear-gradient(to right, rgb(${colors[color]}) 10%, rgba(${\n      colors[background]\n    }, 0) 42%)`};\n  animation: ${load} 1s infinite linear;\n  transform: translateZ(0);\n\n  &:before {\n    width: 50%;\n    height: 50%;\n    background: ${({ color }) => `rgb(${colors[color]})`};\n    border-radius: 100% 0 0 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: \"\";\n  }\n\n  &:after {\n    background: ${({ background }) => `rgb(${colors[background]})`};\n    width: 75%;\n    height: 75%;\n    border-radius: 50%;\n    content: \"\";\n    margin: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  }\n`;\n\nconst Loader = (props: ILoaderStyleProps) => (\n  <SLoader\n    size={props.size}\n    color={props.color}\n    background={props.background}\n    {...props}\n  />\n);\n\nLoader.defaultProps = {\n  size: 50,\n  color: \"dark\",\n  background: \"white\"\n};\n\nexport default Loader;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"./Loader\";\nimport { colors, fonts, shadows, transitions } from \"../styles\";\n\ninterface IButtonStyleProps {\n  fetching: boolean;\n  outline: boolean;\n  type: \"button\" | \"submit\" | \"reset\";\n  color: string;\n  disabled: boolean;\n  icon: any;\n  left: boolean;\n}\n\ninterface IButtonProps extends IButtonStyleProps {\n  id?: string;\n  children: React.ReactNode;\n  onClick?: any;\n}\n\nconst SIcon = styled.div`\n  position: absolute;\n  height: 15px;\n  width: 15px;\n  margin: 0 8px;\n  top: calc((100% - 15px) / 2);\n`;\n\nconst SHoverLayer = styled.div`\n  transition: ${transitions.button};\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(${colors.white}, 0.1);\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n`;\n\nconst SButton = styled.button<IButtonStyleProps>`\n  transition: ${transitions.button};\n  position: relative;\n  border: none;\n  border-style: none;\n  box-sizing: border-box;\n  background-color: ${({ outline, color }) =>\n    outline ? \"transparent\" : `rgb(${colors[color]})`};\n  border: ${({ outline, color }) =>\n    outline ? `1px solid rgb(${colors[color]})` : \"none\"};\n  color: ${({ outline, color }) =>\n    outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`};\n  box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.semibold};\n  padding: ${({ icon, left }) =>\n    icon ? (left ? \"7px 12px 8px 28px\" : \"7px 28px 8px 12px\") : \"8px 12px\"};\n  cursor: ${({ disabled }) => (disabled ? \"auto\" : \"pointer\")};\n  will-change: transform;\n\n  &:disabled {\n    opacity: 0.6;\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      transform: ${({ disabled }) => (!disabled ? \"translateY(-1px)\" : \"none\")};\n      box-shadow: ${({ disabled, outline }) =>\n        !disabled\n          ? outline\n            ? \"none\"\n            : `${shadows.hover}`\n          : `${shadows.soft}`};\n    }\n\n    &:hover ${SHoverLayer} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  &:active {\n    transform: ${({ disabled }) => (!disabled ? \"translateY(1px)\" : \"none\")};\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n    color: ${({ outline, color }) =>\n      outline ? `rgb(${colors[color]})` : `rgba(${colors.white}, 0.24)`};\n\n    & ${SIcon} {\n      opacity: 0.8;\n    }\n  }\n\n  & ${SIcon} {\n    right: ${({ left }) => (left ? \"auto\" : \"0\")};\n    left: ${({ left }) => (left ? \"0\" : \"auto\")};\n    display: ${({ icon }) => (icon ? \"block\" : \"none\")};\n    mask: ${({ icon }) => (icon ? `url(${icon}) center no-repeat` : \"none\")};\n    background-color: ${({ outline, color }) =>\n      outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`};\n    transition: 0.15s ease;\n  }\n`;\n\nconst Button = (props: IButtonProps) => (\n  <SButton\n    type={props.type}\n    outline={props.outline}\n    color={props.color}\n    disabled={props.disabled}\n    icon={props.icon}\n    left={props.left}\n    {...props}\n  >\n    <SHoverLayer />\n    <SIcon />\n    {props.fetching ? (\n      <Loader size={20} color=\"white\" background={props.color} />\n    ) : (\n      props.children\n    )}\n  </SButton>\n);\n\nButton.defaultProps = {\n  fetching: false,\n  outline: false,\n  type: \"button\",\n  color: \"dark\",\n  disabled: false,\n  icon: null,\n  left: false\n};\n\nexport default Button;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { colors } from \"../styles\";\n\ninterface ICardStyleProps {\n  maxWidth: number;\n}\n\ninterface ICardProps extends ICardStyleProps {\n  children: React.ReactNode;\n}\n\nconst SCard = styled.div<ICardStyleProps>`\n  width: 100%;\n  max-width: ${({ maxWidth }) => `${maxWidth}px`};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: rgb(${colors.white});\n  color: rgb(${colors.dark});\n  border-radius: 6px;\n  padding: 20px;\n`;\n\nconst Card = (props: ICardProps) => {\n  return (\n    <SCard maxWidth={props.maxWidth} {...props}>\n      {props.children}\n    </SCard>\n  );\n};\n\nCard.defaultProps = {\n  maxWidth: 600\n};\n\nexport default Card;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { colors, shadows } from \"../styles\";\n\nconst SInput = styled.input`\n  border: none;\n  background: rgb(${colors.white});\n  border-style: none;\n  padding: 12px;\n  outline: none;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  border-radius: 8px;\n  box-shadow: ${shadows.hard};\n`;\n\nconst Input = (props: any) => <SInput {...props} />;\n\nexport default Input;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IBlockieStyleProps {\n  size: number;\n}\n\ninterface IBlockieProps extends IBlockieStyleProps {\n  address: string;\n}\n\nconst SBlockieWrapper = styled.div<IBlockieStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  overflow: hidden;\n  & img {\n    width: 100%;\n  }\n`;\n\nconst Blockie = (props: IBlockieProps) => {\n  const seed = props.address.toLowerCase() || \"\";\n  const imgUrl = window.blockies\n    .create({\n      seed\n    })\n    .toDataURL();\n  return (\n    <SBlockieWrapper size={props.size} {...props}>\n      <img src={imgUrl} alt={props.address} />\n    </SBlockieWrapper>\n  );\n};\n\nBlockie.defaultProps = {\n  address: \"0x0000000000000000000000000000000000000000\",\n  size: 30\n};\n\nexport default Blockie;\n","import { IChainData } from \"./types\";\n\nconst supportedChains: IChainData[] = [\n  {\n    name: \"Ethereum Mainnet\",\n    short_name: \"eth\",\n    chain: \"ETH\",\n    network: \"mainnet\",\n    chain_id: 1,\n    network_id: 1,\n    rpc_url: \"https://mainnet.infura.io/v3/%API_KEY%\"\n  },\n  {\n    name: \"Ethereum Ropsten\",\n    short_name: \"rop\",\n    chain: \"ETH\",\n    network: \"ropsten\",\n    chain_id: 3,\n    network_id: 3,\n    rpc_url: \"https://ropsten.infura.io/v3/%API_KEY%\"\n  },\n  {\n    name: \"Ethereum Rinkeby\",\n    short_name: \"rin\",\n    chain: \"ETH\",\n    network: \"rinkeby\",\n    chain_id: 4,\n    network_id: 4,\n    rpc_url: \"https://rinkeby.infura.io/v3/%API_KEY%\"\n  },\n  {\n    name: \"Ethereum Görli\",\n    short_name: \"gor\",\n    chain: \"ETH\",\n    network: \"goerli\",\n    chain_id: 5,\n    network_id: 5,\n    rpc_url: \"https://rpc.goerli.mudit.blog/\"\n  },\n  {\n    name: \"Ethereum Kovan\",\n    short_name: \"kov\",\n    chain: \"ETH\",\n    network: \"kovan\",\n    chain_id: 42,\n    network_id: 42,\n    rpc_url: \"https://kovan.infura.io/v3/%API_KEY%\"\n  },\n  {\n    name: \"Ethereum Classic Mainnet\",\n    short_name: \"etc\",\n    chain: \"ETC\",\n    network: \"mainnet\",\n    chain_id: 61,\n    network_id: 1,\n    rpc_url: \"https://ethereumclassic.network\"\n  },\n  {\n    name: \"POA Network Sokol\",\n    short_name: \"poa\",\n    chain: \"POA\",\n    network: \"sokol\",\n    chain_id: 77,\n    network_id: 1,\n    rpc_url: \"https://sokol.poa.network\"\n  },\n  {\n    name: \"POA Network Core\",\n    short_name: \"skl\",\n    chain: \"POA\",\n    network: \"core\",\n    chain_id: 99,\n    network_id: 2,\n    rpc_url: \"https://core.poa.network\"\n  },\n  {\n    name: \"xDAI Chain\",\n    short_name: \"xdai\",\n    chain: \"POA\",\n    network: \"dai\",\n    chain_id: 100,\n    network_id: 1,\n    rpc_url: \"https://dai.poa.network\"\n  }\n];\n\nexport default supportedChains;\n","import { IChainData } from \"./types\";\nimport supportedChains from \"./chains\";\n\nexport function capitalize(string: string): string {\n  return string\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(\" \");\n}\n\nexport function ellipseText(\n  text: string = \"\",\n  maxLength: number = 9999\n): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    text\n      .split(\" \")\n      .filter(word => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .join(\" \") + \"...\";\n  return result;\n}\n\nexport function ellipseAddress(\n  address: string = \"\",\n  width: number = 10\n): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || \"0\";\n  n = n + \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\n  return \"0x\" + hex;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace(\"0x\", \"\");\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = \"\";\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nexport function isMobile(): boolean {\n  let mobile: boolean = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4)\n      )\n    ) {\n      return true;\n    } else if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function payloadId(): number {\n  const datePart: number = new Date().getTime() * Math.pow(10, 3);\n  const extraPart: number = Math.floor(Math.random() * Math.pow(10, 3));\n  const id: number = datePart + extraPart;\n  return id;\n}\n\nexport function getChainData(chainId: number): IChainData {\n  const chainData = supportedChains.filter(\n    (chain: any) => chain.chain_id === chainId\n  )[0];\n\n  if (!chainData) {\n    throw new Error(\"ChainId missing or not supported\");\n  }\n\n  const API_KEY = process.env.REACT_APP_INFURA_PROJECT_ID;\n\n  if (\n    chainData.rpc_url.includes(\"infura.io\") &&\n    chainData.rpc_url.includes(\"%API_KEY%\") &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl\n    };\n  }\n\n  return chainData;\n}\n\nexport function getViewportDimensions() {\n  const w = window;\n  const d = document;\n  const e = d.documentElement;\n  const g = d.getElementsByTagName(\"body\")[0];\n  const x = w.innerWidth || e.clientWidth || g.clientWidth;\n  const y = w.innerHeight || e.clientHeight || g.clientHeight;\n\n  return { x, y };\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport Blockie from \"./Blockie\";\nimport { ellipseAddress, getChainData } from \"../helpers/utilities\";\nimport { fonts, responsive, transitions } from \"../styles\";\n\nconst SHeader = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n  @media screen and (${responsive.sm.max}) {\n    font-size: ${fonts.size.small};\n  }\n`;\n\nconst SActiveAccount = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-weight: 500;\n`;\n\nconst SActiveChain = styled(SActiveAccount)`\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  & p {\n    font-size: 0.8em;\n    margin: 0;\n    padding: 0;\n  }\n  & p:nth-child(2) {\n    font-weight: bold;\n  }\n`;\n\ninterface IHeaderStyle {\n  connected: boolean;\n}\n\nconst SAddress = styled.p<IHeaderStyle>`\n  transition: ${transitions.base};\n  font-weight: bold;\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\n`;\n\nconst SBlockie = styled(Blockie)`\n  margin-right: 10px;\n`;\n\nconst SDisconnect = styled.div<IHeaderStyle>`\n  transition: ${transitions.button};\n  font-size: 12px;\n  font-family: monospace;\n  position: absolute;\n  right: 0;\n  top: 20px;\n  opacity: 0.7;\n  cursor: pointer;\n\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.5;\n  }\n`;\n\ninterface IHeaderProps {\n  killSession: () => void;\n  connected: boolean;\n  address: string;\n  chainId: number;\n}\n\nconst Header = (props: IHeaderProps) => {\n  const { connected, address, chainId, killSession } = props;\n  const activeChain = chainId ? getChainData(chainId).name : null;\n  return (\n    <SHeader {...props}>\n      {activeChain && (\n        <SActiveChain>\n          <p>{`Connected to`}</p>\n          <p>{activeChain}</p>\n        </SActiveChain>\n      )}\n      {address && (\n        <SActiveAccount>\n          <SBlockie address={address} />\n          <SAddress connected={connected}>{ellipseAddress(address)}</SAddress>\n          <SDisconnect connected={connected} onClick={killSession}>\n            {\"Disconnect\"}\n          </SDisconnect>\n        </SActiveAccount>\n      )}\n    </SHeader>\n  );\n};\n\nexport default Header;\n","export let store: Storage;\n\nif (\n  typeof window !== \"undefined\" &&\n  typeof window.localStorage !== \"undefined\"\n) {\n  store = window.localStorage;\n}\n\nexport const setLocal = (key: string, data: any) => {\n  const jsonData = JSON.stringify(data);\n  if (store) {\n    store.setItem(key, jsonData);\n  }\n};\n\nexport const getLocal = (key: string) => {\n  let data = null;\n  let raw = null;\n  if (store) {\n    raw = store.getItem(key);\n  }\n  if (raw && typeof raw === \"string\") {\n    try {\n      data = JSON.parse(raw);\n    } catch (error) {\n      return null;\n    }\n  }\n  return data;\n};\n\nexport const removeLocal = (key: string) => {\n  if (store) {\n    store.removeItem(key);\n  }\n};\n\nexport const updateLocal = (key: string, data: any) => {\n  const localData = getLocal(key) || {};\n  const mergedData = { ...localData, ...data };\n  setLocal(key, mergedData);\n};\n\nexport const connextStore = {\n  get: async (key: string) => {\n    const raw = store.getItem(`CF_NODE:${key}`);\n    if (raw) {\n      try {\n        return JSON.parse(raw);\n      } catch {\n        return raw;\n      }\n    }\n    if (\n      key.endsWith(\"channel\") ||\n      key.endsWith(\"appInstanceIdToProposedAppInstance\")\n    ) {\n      const partialMatches = {};\n      for (const k of Object.keys(localStorage)) {\n        if (k.includes(`${key}/`)) {\n          try {\n            partialMatches[\n              k.replace(\"CF_NODE:\", \"\").replace(`${key}/`, \"\")\n            ] = JSON.parse(store.getItem(k) || \"\");\n          } catch {\n            partialMatches[\n              k.replace(\"CF_NODE:\", \"\").replace(`${key}/`, \"\")\n            ] = store.getItem(k);\n          }\n        }\n      }\n      return partialMatches;\n    }\n    return raw;\n  },\n  set: async (pairs: any, allowDelete: any) => {\n    for (const pair of pairs) {\n      store.setItem(\n        `CF_NODE:${pair.key}`,\n        typeof pair.value === \"string\" ? pair.value : JSON.stringify(pair.value)\n      );\n    }\n  }\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst SColumn = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Column = (props: any) => <SColumn {...props}>{props.children}</SColumn>;\n\nexport default Column;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IClientMeta } from \"@walletconnect/types\";\n\nconst SIcon = styled.img`\n  width: 100px;\n  margin: 0 auto;\n`;\n\nconst SCenter = styled.div`\n  text-align: center;\n`;\n\nconst SName = styled(SCenter)`\n  font-weight: bold;\n`;\n\ninterface IPeerMetaProps {\n  peerMeta: IClientMeta;\n}\n\nconst PeerMeta = (props: IPeerMetaProps) => (\n  <>\n    <SIcon src={props.peerMeta.icons[0]} alt={props.peerMeta.name} />\n    <SName>{props.peerMeta.name}</SName>\n    <SCenter>{props.peerMeta.description}</SCenter>\n    <SCenter>{props.peerMeta.url}</SCenter>\n  </>\n);\n\nexport default PeerMeta;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { convertHexToUtf8, convertHexToNumber } from \"@walletconnect/utils\";\nimport Column from \"./Column\";\nimport Button from \"./Button\";\n\nconst SRequestValues = styled.div`\n  font-family: monospace;\n  width: 100%;\n  font-size: 12px;\n  background-color: #eee;\n  padding: 8px;\n  word-break: break-word;\n  border-radius: 8px;\n  margin-bottom: 10px;\n`;\n\nconst SConnectedPeer = styled.div`\n  display: flex;\n  align-items: center;\n  & img {\n    width: 40px;\n    height: 40px;\n  }\n  & > div {\n    margin-left: 10px;\n  }\n`;\n\nconst SActions = styled.div`\n  margin: 0;\n  margin-top: 20px;\n\n  display: flex;\n  justify-content: space-around;\n  & > * {\n    margin: 0 5px;\n  }\n`;\n\nclass DisplayRequest extends React.Component<any, any> {\n  public render() {\n    const {\n      displayRequest,\n      peerMeta,\n      approveRequest,\n      rejectRequest\n    } = this.props;\n\n    let params = [{ label: \"Method\", value: displayRequest.method }];\n\n    switch (displayRequest.method) {\n      case \"eth_sendTransaction\":\n      case \"eth_signTransaction\":\n        params = [\n          ...params,\n          { label: \"From\", value: displayRequest.params[0].from },\n          { label: \"To\", value: displayRequest.params[0].to },\n          {\n            label: \"Gas Limit\",\n            value: displayRequest.params[0].gas\n              ? convertHexToNumber(displayRequest.params[0].gas)\n              : displayRequest.params[0].gasLimit\n              ? convertHexToNumber(displayRequest.params[0].gasLimit)\n              : \"\"\n          },\n          {\n            label: \"Gas Price\",\n            value: convertHexToNumber(displayRequest.params[0].gasPrice)\n          },\n          {\n            label: \"Nonce\",\n            value: convertHexToNumber(displayRequest.params[0].nonce)\n          },\n          {\n            label: \"Value\",\n            value: convertHexToNumber(displayRequest.params[0].value)\n          },\n          { label: \"Data\", value: displayRequest.params[0].data }\n        ];\n        break;\n\n      case \"eth_sign\":\n        params = [\n          ...params,\n          { label: \"Address\", value: displayRequest.params[0] },\n          { label: \"Message\", value: displayRequest.params[1] }\n        ];\n        break;\n      case \"personal_sign\":\n        params = [\n          ...params,\n          { label: \"Address\", value: displayRequest.params[1] },\n          {\n            label: \"Message\",\n            value: convertHexToUtf8(displayRequest.params[0])\n          }\n        ];\n        break;\n      default:\n        params = [\n          ...params,\n          {\n            label: \"params\",\n            value: JSON.stringify(displayRequest.params, null, \"\\t\")\n          }\n        ];\n        break;\n    }\n    return (\n      <Column>\n        <h6>{\"Request From\"}</h6>\n        <SConnectedPeer>\n          <img src={peerMeta.icons[0]} alt={peerMeta.name} />\n          <div>{peerMeta.name}</div>\n        </SConnectedPeer>\n        {params.map(param => (\n          <React.Fragment key={param.label}>\n            <h6>{param.label}</h6>\n            <SRequestValues>{param.value}</SRequestValues>\n          </React.Fragment>\n        ))}\n        <SActions>\n          <Button onClick={approveRequest}>{`Approve`}</Button>\n          <Button onClick={rejectRequest}>{`Reject`}</Button>\n        </SActions>\n      </Column>\n    );\n  }\n}\n\nexport default DisplayRequest;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { colors, shadows } from \"../styles\";\n\nconst SRequestButton = styled.div`\n  border: none;\n  background: rgb(${colors.white});\n  border-style: none;\n  padding: 12px;\n  outline: none;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  border-radius: 8px;\n  box-shadow: ${shadows.hard};\n  cursor: pointer;\n`;\n\nconst RequestButton = (props: any) => <SRequestButton {...props} />;\n\nexport default RequestButton;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\ninterface IClickOutsideProps {\n  onClickOutside: (event: any) => void;\n}\n\nclass ClickOutside extends React.Component<IClickOutsideProps> {\n  public static propTypes = {\n    onClickOutside: PropTypes.func.isRequired\n  };\n\n  private element: HTMLDivElement | null;\n  private isTouch: boolean = false;\n\n  public componentDidMount() {\n    document.addEventListener(\"touchend\", this.handle, true);\n    document.addEventListener(\"click\", this.handle, true);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener(\"touchend\", this.handle, true);\n    document.removeEventListener(\"click\", this.handle, true);\n  }\n\n  public handle = (event: any) => {\n    if (event.type === \"touchend\") {\n      this.isTouch = true;\n    }\n    if (event.type === \"click\" && this.isTouch) {\n      return;\n    }\n    const { onClickOutside } = this.props;\n    const element = this.element;\n    if (element) {\n      if (!element.contains(event.target)) {\n        onClickOutside(event);\n      }\n    }\n  };\n\n  public render() {\n    const { children, onClickOutside, ...props } = this.props;\n    return (\n      <div {...props} ref={c => (this.element = c)}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default ClickOutside;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { colors, shadows, transitions } from \"../styles\";\nimport ClickOutside from \"./ClickOutside\";\n\ninterface IDropdownStyle {\n  show?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  monospace?: boolean;\n}\n\nconst SDropdown = styled.div<IDropdownStyle>`\n  transition: ${transitions.base};\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 6px;\n  box-shadow: ${shadows.hard};\n  font-family: ${({ monospace }) => (monospace ? \"monospace\" : \"inherit\")};\n  cursor: ${({ disabled }) => (disabled ? \"default\" : \"pointer\")};\n`;\n\nconst SRow = styled.div<IDropdownStyle>`\n  transition: ${transitions.base};\n  width: 100%;\n  padding: 10px 20px;\n  background: rgb(${colors.white});\n  border-radius: ${({ selected, show }) =>\n    selected ? (show ? \"6px 6px 0 0 \" : \"6px\") : \"none\"};\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-bottom-color: ${({ show }) =>\n    show ? `rgba(${colors.dark}, 0.3)` : `rgba(${colors.dark}, 0)`};\n  &:last-child {\n    border-bottom-color: rgba(${colors.dark}, 0);\n  }\n`;\n\nconst SAbsolute = styled.div<IDropdownStyle>`\n  transition: ${transitions.base};\n  position: absolute;\n  top: 100%;\n  width: 100%;\n  max-height: 150px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  z-index: 1;\n  border-radius: 0 0 6px 6px;\n  box-shadow: ${shadows.hard};\n  opacity: ${({ show }) => (show ? \"1\" : \"0\")};\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"non\")};\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n`;\n\ninterface IDropdownState {\n  show: boolean;\n  optionsDict: any;\n  otherKeys: any[];\n}\n\ninterface IDropdownProps {\n  id: string;\n  selected: number | string;\n  options: any[] | object;\n  displayKey: number | string;\n  targetKey: number | string;\n  disabled?: boolean;\n  onChange?: any;\n  monospace?: boolean;\n}\n\nclass Dropdown extends React.Component<IDropdownProps, IDropdownState> {\n  public state = {\n    show: false,\n    optionsDict: {},\n    otherKeys: []\n  };\n\n  public componentDidMount() {\n    const { otherKeys, optionsDict } = this.parseKeys(this.props);\n    this.setState({ otherKeys, optionsDict });\n  }\n\n  public componentDidUpdate(prevProps: IDropdownProps) {\n    if (prevProps.selected !== this.props.selected) {\n      const { otherKeys, optionsDict } = this.parseKeys(this.props);\n      this.setState({ otherKeys, optionsDict });\n    }\n  }\n\n  public parseKeys = (props: {\n    targetKey: number | string;\n    options: any[] | object;\n    selected: number | string;\n  }) => {\n    const { targetKey, options, selected } = props;\n    let optionsDict = {};\n    let otherKeys: any[] = [];\n    if (Array.isArray(options)) {\n      if (!targetKey) {\n        throw new Error(\n          'Error: \"option\" prop is type Array requires \"targetKey\" prop'\n        );\n      }\n      options.forEach((option: any) => {\n        const optionKey = option[targetKey];\n        if (option[targetKey] !== selected) {\n          otherKeys.push(optionKey);\n        }\n        optionsDict[optionKey] = option;\n      });\n    } else {\n      otherKeys = Object.keys(options);\n      optionsDict = options;\n    }\n    return { otherKeys, optionsDict };\n  };\n\n  public toggleDropdown = () => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({ show: !this.state.show });\n  };\n\n  public onClickOutside = () => {\n    if (this.state.show) {\n      this.toggleDropdown();\n    }\n  };\n\n  public onChange = async (selected: string) => {\n    this.toggleDropdown();\n    if (this.props.onChange) {\n      this.props.onChange(selected);\n    }\n  };\n\n  public render() {\n    const { id, displayKey, selected, disabled, monospace } = this.props;\n    const { show, otherKeys, optionsDict } = this.state;\n    return !!Object.keys(optionsDict).length ? (\n      <ClickOutside onClickOutside={this.onClickOutside}>\n        <SDropdown\n          monospace={!!monospace}\n          disabled={disabled || !otherKeys.length}\n          id={id}\n        >\n          <SRow selected={true} show={show} onClick={this.toggleDropdown}>\n            {optionsDict[selected][displayKey]}\n          </SRow>\n          {!!otherKeys.length && (\n            <SAbsolute show={show}>\n              {otherKeys.map((otherKey, idx) => (\n                <SRow\n                  show={show}\n                  onClick={() => this.onChange(otherKey)}\n                  key={`${otherKey}-${idx}`}\n                  id={`${id}-${otherKey}-${idx}`}\n                >\n                  {optionsDict[otherKey][displayKey]}\n                </SRow>\n              ))}\n            </SAbsolute>\n          )}\n        </SDropdown>\n      </ClickOutside>\n    ) : null;\n  }\n}\n\nexport default Dropdown;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Dropdown from \"../components/Dropdown\";\nimport chains from \"../helpers/chains\";\nimport { ellipseAddress } from \"src/helpers/utilities\";\nimport { responsive } from \"../styles\";\nimport Blockie from \"./Blockie\";\nimport { getViewportDimensions } from \"../helpers/utilities\";\n\nconst SSection = styled.div`\n  width: 100%;\n`;\n\nconst SBlockie = styled(Blockie)`\n  margin-right: 5px;\n  @media screen and (${responsive.xs.max}) {\n    margin-right: 1vw;\n  }\n`;\n\nconst SAddressDropdownWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface IAccountDetailsProps {\n  updateAddress?: any;\n  updateChain?: any;\n  accounts: string[];\n  activeIndex: number;\n  address: string;\n  chainId: number;\n}\n\nconst AccountDetails = (props: IAccountDetailsProps) => {\n  const {\n    chainId,\n    address,\n    activeIndex,\n    accounts,\n    updateAddress,\n    updateChain\n  } = props;\n  const windowWidth = getViewportDimensions().x;\n  const maxWidth = 468;\n  const maxChar = 12;\n  const ellipseLength =\n    windowWidth > maxWidth\n      ? maxChar\n      : Math.floor(windowWidth * (maxChar / maxWidth));\n  const accountsMap = accounts.map((addr: string, index: number) => ({\n    index,\n    display_address: ellipseAddress(addr, ellipseLength)\n  }));\n  return (\n    <React.Fragment>\n      <SSection>\n        <h6>{\"Account\"}</h6>\n        <SAddressDropdownWrapper>\n          <SBlockie size={40} address={address} />\n          <Dropdown\n            id={\"dropdown-account\"}\n            monospace\n            selected={activeIndex}\n            options={accountsMap}\n            displayKey={\"display_address\"}\n            targetKey={\"index\"}\n            onChange={updateAddress}\n          />\n        </SAddressDropdownWrapper>\n      </SSection>\n      <SSection>\n        <h6>{\"Network\"}</h6>\n        <Dropdown\n          id={\"dropdown-network\"}\n          selected={chainId}\n          options={chains}\n          displayKey={\"name\"}\n          targetKey={\"chain_id\"}\n          onChange={updateChain}\n        />\n      </SSection>\n    </React.Fragment>\n  );\n};\nexport default AccountDetails;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport * as QrReader from \"react-qr-reader\";\n\nconst SQRCodeScannerContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 5;\n  margin: 0 auto !important;\n  background: rgb(0, 0, 0);\n`;\n\nconst SQRCodeScannerWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SCloseButton = styled.div`\n  transition: all 0.2s ease-in-out;\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  z-index: 10;\n  top: 15px;\n  right: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(45deg);\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst SFirstLine = styled.div`\n  position: absolute;\n  width: 90%;\n  border: 1px solid rgb(255, 255, 255);\n`;\n\nconst SSecondLine = styled(SFirstLine)`\n  transform: rotate(90deg);\n`;\n\nexport interface IQRCodeValidateResponse {\n  error: Error | null;\n  result: any | null;\n}\n\ninterface IQRCodeScannerProps {\n  onValidate: (data: string) => IQRCodeValidateResponse;\n  onScan: (data: any) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\ninterface IQRCodeScannerState {\n  delay: number | false;\n}\n\nclass QRCodeScanner extends React.Component<\n  IQRCodeScannerProps,\n  IQRCodeScannerState\n> {\n  public state = {\n    delay: 300\n  };\n\n  public stopRecording = async () => {\n    await this.setState({ delay: false });\n  };\n\n  public handleScan = (data: string) => {\n    if (data) {\n      const { result, error } = this.props.onValidate(data);\n      if (result) {\n        this.stopRecording();\n        this.props.onScan(result);\n      } else {\n        this.handleError(error);\n      }\n    }\n  };\n\n  public handleError = (error: Error | null) => {\n    if (error) {\n      this.props.onError(error);\n    }\n  };\n\n  public onClose = async () => {\n    try {\n      await this.stopRecording();\n      this.props.onClose();\n    } catch (error) {\n      this.handleError(error);\n    }\n  };\n\n  public componentWillUnmount() {\n    this.stopRecording();\n  }\n  public render() {\n    return (\n      <SQRCodeScannerContainer>\n        <SCloseButton onClick={this.onClose}>\n          <SFirstLine />\n          <SSecondLine />\n        </SCloseButton>\n        <SQRCodeScannerWrapper>\n          <QrReader\n            delay={this.state.delay}\n            onError={this.handleError}\n            onScan={this.handleScan}\n            style={{ width: \"100%\" }}\n          />\n        </SQRCodeScannerWrapper>\n      </SQRCodeScannerContainer>\n    );\n  }\n}\n\nexport default QRCodeScanner;\n","import * as ethers from \"ethers\";\nimport { getChainData } from \"./utilities\";\nimport { setLocal, getLocal } from \"./store\";\n\nconst standardPath = \"m/44'/60'/0'/0\";\nconst MNEMONIC_KEY = \"MNEMONIC\";\n\nlet wallet: ethers.Wallet | null = null;\n\nexport function getWallet() {\n  if (wallet) {\n    return wallet;\n  }\n  return null;\n}\n\nexport function getMultipleAccounts(count: number = 2) {\n  const accounts = [];\n  let wallet = null;\n  for (let i = 0; i < count; i++) {\n    wallet = createWallet(i);\n    accounts.push(wallet.address);\n  }\n  return accounts;\n}\n\nexport function generatePath(index: number) {\n  const path = `${standardPath}/${index}`;\n  return path;\n}\n\nexport function generateMnemonic() {\n  const entropy = ethers.utils.randomBytes(16);\n  const mnemonic = ethers.utils.HDNode.entropyToMnemonic(entropy);\n  return mnemonic;\n}\n\nexport function getMnemonic() {\n  let mnemonic = getLocal(MNEMONIC_KEY);\n  if (!mnemonic) {\n    mnemonic = generateMnemonic();\n    setLocal(MNEMONIC_KEY, mnemonic);\n  }\n  return mnemonic;\n}\n\nexport function createWallet(index: number) {\n  const mnemonic = getMnemonic();\n  const path = generatePath(index);\n  const wallet = ethers.Wallet.fromMnemonic(mnemonic, path);\n  return wallet;\n}\n\nexport async function updateWallet(index: number, chainId: number) {\n  const rpcUrl = getChainData(chainId).rpc_url;\n  wallet = createWallet(index);\n  const provider = new ethers.providers.JsonRpcProvider(rpcUrl);\n  wallet.connect(provider);\n  return null;\n}\n\nexport async function sendTransaction(transaction: any) {\n  if (wallet) {\n    if (\n      transaction.from &&\n      transaction.from.toLowerCase() !== wallet.address.toLowerCase()\n    ) {\n      console.error(\"Transaction request From doesn't match active account\"); // tslint:disable-line\n    }\n\n    if (transaction.from) {\n      delete transaction.from;\n    }\n\n    // ethers.js expects gasLimit instead\n    if (\"gas\" in transaction) {\n      transaction.gasLimit = transaction.gas;\n      delete transaction.gas;\n    }\n\n    const result = await wallet.sendTransaction(transaction);\n    return result.hash;\n  } else {\n    console.error(\"No Active Account\"); // tslint:disable-line\n  }\n  return null;\n}\n\nexport async function signTransaction(data: any) {\n  if (wallet) {\n    if (data && data.from) {\n      delete data.from;\n    }\n    const result = await wallet.sign(data);\n    return result;\n  } else {\n    console.error(\"No Active Account\"); // tslint:disable-line\n  }\n  return null;\n}\n\nexport async function signMessage(data: any) {\n  if (wallet) {\n    const signingKey = new ethers.utils.SigningKey(wallet.privateKey);\n    const sigParams = await signingKey.signDigest(ethers.utils.arrayify(data));\n    const result = await ethers.utils.joinSignature(sigParams);\n    return result;\n  } else {\n    console.error(\"No Active Account\"); // tslint:disable-line\n  }\n  return null;\n}\n\nexport async function signPersonalMessage(message: any) {\n  if (wallet) {\n    const result = await wallet.signMessage(\n      ethers.utils.isHexString(message)\n        ? ethers.utils.arrayify(message)\n        : message\n    );\n    return result;\n  } else {\n    console.error(\"No Active Account\"); // tslint:disable-line\n  }\n  return null;\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport { IAssetData, IGasPrices, IParsedTx } from \"./types\";\nimport { payloadId, getChainData } from \"./utilities\";\nimport { IJsonRpcRequest } from \"@walletconnect/types\";\n\nconst api: AxiosInstance = axios.create({\n  baseURL: \"https://ethereum-api.xyz\",\n  timeout: 30000, // 30 secs\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nexport const apiSendTransaction = async (\n  txParams: any,\n  chainId: number\n): Promise<number> => {\n  const rpcUrl = getChainData(chainId).rpc_url;\n\n  if (!rpcUrl && typeof rpcUrl !== \"string\") {\n    throw new Error(\"Invalid or missing rpc url\");\n  }\n\n  const response = await axios.post(rpcUrl, {\n    jsonrpc: \"2.0\",\n    id: payloadId(),\n    method: \"eth_sendTransaction\",\n    params: [txParams]\n  });\n\n  const result = response.data.result;\n  return result;\n};\n\nexport async function apiGetAccountAssets(\n  address: string,\n  chainId: number\n): Promise<IAssetData[]> {\n  const response = await api.get(\n    `/account-assets?address=${address}&chainId=${chainId}`\n  );\n  const { result } = response.data;\n  return result;\n}\n\nexport async function apiGetAccountTransactions(\n  address: string,\n  chainId: number\n): Promise<IParsedTx[]> {\n  const response = await api.get(\n    `/account-transactions?address=${address}&chainId=${chainId}`\n  );\n  const { result } = response.data;\n  return result;\n}\n\nexport const apiGetAccountNonce = async (\n  address: string,\n  chainId: number\n): Promise<string> => {\n  const response = await api.get(\n    `/account-nonce?address=${address}&chainId=${chainId}`\n  );\n  const { result } = response.data;\n  return result;\n};\n\nexport const apiGetGasPrices = async (): Promise<IGasPrices> => {\n  const response = await api.get(`/gas-prices`);\n  const { result } = response.data;\n  return result;\n};\n\nexport const apiGetBlockNumber = async (\n  chainId: number\n): Promise<IGasPrices> => {\n  const response = await api.get(`/block-number?chainId=${chainId}`);\n  const { result } = response.data;\n  return result;\n};\n\nexport const apiGetCustomRequest = async (\n  chainId: number,\n  customRpc: Partial<IJsonRpcRequest>\n): Promise<any> => {\n  const response = await api.post(\n    `/custom-request?chainId=${chainId}`,\n    customRpc\n  );\n  const { result } = response.data;\n  return result;\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport WalletConnect from \"@walletconnect/browser\";\nimport Button from \"./components/Button\";\nimport Card from \"./components/Card\";\nimport Input from \"./components/Input\";\nimport Header from \"./components/Header\";\nimport Column from \"./components/Column\";\nimport PeerMeta from \"./components/PeerMeta\";\nimport DisplayRequest from \"./components/DisplayRequest\";\nimport RequestButton from \"./components/RequestButton\";\nimport AccountDetails from \"./components/AccountDetails\";\nimport QRCodeScanner, {\n  IQRCodeValidateResponse\n} from \"./components/QRCodeScanner\";\nimport {\n  getMultipleAccounts,\n  getWallet,\n  updateWallet,\n  sendTransaction,\n  signTransaction,\n  signMessage,\n  signPersonalMessage\n} from \"./helpers/wallet\";\nimport { apiGetCustomRequest } from \"./helpers/api\";\n\nconst SContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  min-height: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 0;\n`;\n\nconst SVersionNumber = styled.div`\n  position: absolute;\n  font-size: 12px;\n  bottom: 6%;\n  right: -24px;\n  opacity: 0.3;\n  transform: rotate(-90deg);\n`;\n\nconst SContent = styled.div`\n  width: 100%;\n  flex: 1;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst STitle = styled.h1`\n  margin: 10px auto;\n  text-align: center;\n  font-size: calc(10px + 2vmin);\n`;\n\nconst SActions = styled.div`\n  margin: 0;\n  margin-top: 20px;\n\n  display: flex;\n  justify-content: space-around;\n  & > * {\n    margin: 0 5px;\n  }\n`;\n\nconst SActionsColumn = styled(SActions)`\n  flex-direction: row;\n  align-items: center;\n\n  & > p {\n    font-weight: 600;\n  }\n`;\n\nconst SButton = styled(Button)`\n  width: 50%;\n  height: 40px;\n`;\n\nconst SInput = styled(Input)`\n  width: 50%;\n  margin: 10px;\n  font-size: 14px;\n  height: 40px;\n`;\n\nconst SConnectedPeer = styled.div`\n  display: flex;\n  align-items: center;\n  & img {\n    width: 40px;\n    height: 40px;\n  }\n  & > div {\n    margin-left: 10px;\n  }\n`;\n\nconst SRequestButton = styled(RequestButton)`\n  margin-bottom: 10px;\n`;\n\ninterface IAppState {\n  loading: boolean;\n  scanner: boolean;\n  walletConnector: WalletConnect | null;\n  uri: string;\n  peerMeta: {\n    description: string;\n    url: string;\n    icons: string[];\n    name: string;\n    ssl: boolean;\n  };\n  connected: boolean;\n  chainId: number;\n  accounts: string[];\n  activeIndex: number;\n  address: string;\n  requests: any[];\n  results: any[];\n  displayRequest: any;\n}\n\nconst defaultChainId = 3;\n\nconst TEST_ACCOUNTS = getMultipleAccounts();\n\nconst INITIAL_STATE = {\n  loading: false,\n  scanner: false,\n  walletConnector: null,\n  uri: \"\",\n  peerMeta: {\n    description: \"\",\n    url: \"\",\n    icons: [],\n    name: \"\",\n    ssl: false\n  },\n  connected: false,\n  chainId: defaultChainId,\n  accounts: TEST_ACCOUNTS,\n  address: TEST_ACCOUNTS[0],\n  activeIndex: 0,\n  requests: [],\n  results: [],\n  displayRequest: null\n};\n\nconst signingMethods = [\n  \"eth_sendTransaction\",\n  \"eth_signTransaction\",\n  \"personal_sign\",\n  \"eth_sign\",\n  \"eth_signTypedData\"\n];\n\nclass App extends React.Component<{}> {\n  public state: IAppState;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE\n    };\n  }\n  public componentDidMount() {\n    this.initWallet();\n  }\n\n  public initWallet = async () => {\n    const local = localStorage ? localStorage.getItem(\"walletconnect\") : null;\n\n    if (local) {\n      let session;\n\n      try {\n        session = JSON.parse(local);\n      } catch (error) {\n        throw error;\n      }\n\n      const walletConnector = new WalletConnect({ session });\n\n      const { connected, chainId, accounts, peerMeta } = walletConnector;\n\n      const address = accounts[0];\n\n      const activeIndex = accounts.indexOf(address);\n\n      await updateWallet(activeIndex, chainId);\n\n      await this.setState({\n        connected,\n        walletConnector,\n        address,\n        activeIndex,\n        accounts,\n        chainId,\n        peerMeta\n      });\n\n      this.subscribeToEvents();\n    }\n  };\n\n  public initWalletConnect = async () => {\n    const { uri } = this.state;\n\n    this.setState({ loading: true });\n\n    try {\n      const walletConnector = new WalletConnect({ uri });\n\n      window.walletConnector = walletConnector; // tslint:disable-line\n\n      if (!walletConnector.connected) {\n        await walletConnector.createSession();\n      }\n\n      await this.setState({\n        loading: false,\n        walletConnector,\n        uri: walletConnector.uri\n      });\n\n      this.subscribeToEvents();\n    } catch (error) {\n      this.setState({ loading: false });\n\n      throw error;\n    }\n  };\n\n  public approveSession = () => {\n    const { walletConnector, chainId, address } = this.state;\n    if (walletConnector) {\n      walletConnector.approveSession({ chainId, accounts: [address] });\n    }\n    this.setState({ walletConnector });\n  };\n\n  public rejectSession = () => {\n    const { walletConnector } = this.state;\n    if (walletConnector) {\n      walletConnector.rejectSession();\n    }\n    this.setState({ walletConnector });\n  };\n\n  public killSession = () => {\n    const { walletConnector } = this.state;\n    if (walletConnector) {\n      walletConnector.killSession();\n    }\n    this.resetApp();\n  };\n\n  public resetApp = async () => {\n    await this.setState({ ...INITIAL_STATE });\n    this.initWallet();\n  };\n\n  public subscribeToEvents = () => {\n    const { walletConnector } = this.state;\n\n    if (walletConnector) {\n      walletConnector.on(\"session_request\", (error, payload) => {\n        console.log('walletConnector.on(\"session_request\")'); // tslint:disable-line\n\n        if (error) {\n          throw error;\n        }\n\n        const { peerMeta } = payload.params[0];\n        this.setState({ peerMeta });\n      });\n\n      walletConnector.on(\"session_update\", (error, payload) => {\n        console.log('walletConnector.on(\"session_update\")'); // tslint:disable-line\n\n        if (error) {\n          throw error;\n        }\n      });\n\n      walletConnector.on(\"call_request\", (error, payload) => {\n        console.log('walletConnector.on(\"call_request\")'); // tslint:disable-line\n\n        if (error) {\n          throw error;\n        }\n\n        if (!signingMethods.includes(payload.method)) {\n          const { chainId } = this.state;\n          apiGetCustomRequest(chainId, payload)\n            .then(result =>\n              walletConnector.approveRequest({\n                id: payload.id,\n                result\n              })\n            )\n            .catch(() =>\n              walletConnector.rejectRequest({\n                id: payload.id,\n                error: { message: \"JSON RPC method not supported\" }\n              })\n            );\n          return;\n        }\n\n        const requests = [...this.state.requests, payload];\n        this.setState({ requests });\n      });\n\n      walletConnector.on(\"connect\", (error, payload) => {\n        console.log('walletConnector.on(\"connect\")'); // tslint:disable-line\n\n        if (error) {\n          throw error;\n        }\n\n        this.setState({ connected: true });\n      });\n\n      walletConnector.on(\"disconnect\", (error, payload) => {\n        console.log('walletConnector.on(\"disconnect\")'); // tslint:disable-line\n\n        if (error) {\n          throw error;\n        }\n\n        this.resetApp();\n      });\n\n      if (walletConnector.connected) {\n        const { chainId, accounts } = walletConnector;\n        const index = 0;\n        const address = accounts[index];\n        updateWallet(index, chainId);\n        this.setState({\n          connected: true,\n          address,\n          chainId\n        });\n      }\n\n      this.setState({ walletConnector });\n    }\n  };\n\n  public updateSession = async (sessionParams: {\n    chainId?: number;\n    activeIndex?: number;\n  }) => {\n    const { walletConnector, chainId, accounts, activeIndex } = this.state;\n    const _chainId = sessionParams.chainId || chainId;\n    const _activeIndex = sessionParams.activeIndex || activeIndex;\n    const address = accounts[_activeIndex];\n    if (walletConnector) {\n      walletConnector.updateSession({\n        chainId: _chainId,\n        accounts: [address]\n      });\n    }\n\n    await this.setState({\n      walletConnector,\n      chainId: _chainId,\n      address\n    });\n  };\n\n  public updateChain = async (chainId: number | string) => {\n    const { activeIndex } = this.state;\n    const _chainId = Number(chainId);\n    await updateWallet(activeIndex, _chainId);\n    await this.updateSession({ chainId: _chainId });\n  };\n\n  public updateAddress = async (activeIndex: number) => {\n    const { chainId } = this.state;\n    await updateWallet(activeIndex, chainId);\n    await this.updateSession({ activeIndex });\n  };\n\n  public toggleScanner = () => {\n    this.setState({ scanner: !this.state.scanner });\n  };\n\n  public onQRCodeValidate = (data: string): IQRCodeValidateResponse => {\n    const res: IQRCodeValidateResponse = {\n      error: null,\n      result: null\n    };\n    try {\n      res.result = data;\n    } catch (error) {\n      res.error = error;\n    }\n\n    return res;\n  };\n\n  public onQRCodeScan = async (data: any) => {\n    const uri = typeof data === \"string\" ? data : \"\";\n    if (uri) {\n      await this.setState({ uri });\n      await this.initWalletConnect();\n      this.toggleScanner();\n    }\n  };\n\n  public onURIPaste = async (e: any) => {\n    const data = e.target.value;\n    const uri = typeof data === \"string\" ? data : \"\";\n    if (uri) {\n      await this.setState({ uri });\n      await this.initWalletConnect();\n    }\n  };\n\n  public onQRCodeError = (error: Error) => {\n    throw error;\n  };\n\n  public onQRCodeClose = () => this.toggleScanner();\n\n  public openRequest = (request: any) =>\n    this.setState({ displayRequest: request });\n\n  public closeRequest = async () => {\n    const { requests, displayRequest } = this.state;\n    const filteredRequests = requests.filter(\n      request => request.id !== displayRequest.id\n    );\n    await this.setState({\n      requests: filteredRequests,\n      displayRequest: null\n    });\n  };\n\n  public approveRequest = async () => {\n    const {\n      walletConnector,\n      displayRequest,\n      address,\n      activeIndex,\n      chainId\n    } = this.state;\n\n    let errorMsg = \"\";\n\n    try {\n      let result = null;\n\n      if (walletConnector) {\n        if (!getWallet()) {\n          await updateWallet(activeIndex, chainId);\n        }\n\n        let transaction = null;\n        let dataToSign = null;\n        let addressRequested = null;\n\n        switch (displayRequest.method) {\n          case \"eth_sendTransaction\":\n            transaction = displayRequest.params[0];\n            addressRequested = transaction.from;\n            if (address.toLowerCase() === addressRequested.toLowerCase()) {\n              result = await sendTransaction(transaction);\n            } else {\n              errorMsg = \"Address requested does not match active account\";\n            }\n            break;\n          case \"eth_signTransaction\":\n            transaction = displayRequest.params[0];\n            addressRequested = transaction.from;\n            if (address.toLowerCase() === addressRequested.toLowerCase()) {\n              result = await signTransaction(transaction);\n            } else {\n              errorMsg = \"Address requested does not match active account\";\n            }\n            break;\n          case \"eth_sign\":\n            dataToSign = displayRequest.params[1];\n            addressRequested = displayRequest.params[0];\n            if (address.toLowerCase() === addressRequested.toLowerCase()) {\n              result = await signMessage(dataToSign);\n            } else {\n              errorMsg = \"Address requested does not match active account\";\n            }\n            break;\n          case \"personal_sign\":\n            dataToSign = displayRequest.params[0];\n            addressRequested = displayRequest.params[1];\n            if (address.toLowerCase() === addressRequested.toLowerCase()) {\n              result = await signPersonalMessage(dataToSign);\n            } else {\n              errorMsg = \"Address requested does not match active account\";\n            }\n            break;\n          default:\n            break;\n        }\n\n        if (result) {\n          walletConnector.approveRequest({\n            id: displayRequest.id,\n            result\n          });\n        } else {\n          let message = \"JSON RPC method not supported\";\n          if (!getWallet()) {\n            message = \"No Active Account\";\n          }\n          walletConnector.rejectRequest({\n            id: displayRequest.id,\n            error: { message }\n          });\n        }\n      }\n    } catch (error) {\n      console.error(error); // tslint:disable-line\n      if (walletConnector) {\n        walletConnector.rejectRequest({\n          id: displayRequest.id,\n          error: { message: errorMsg || \"Failed or Rejected Request\" }\n        });\n      }\n    }\n\n    this.closeRequest();\n    await this.setState({ walletConnector });\n  };\n\n  public rejectRequest = async () => {\n    const { walletConnector, displayRequest } = this.state;\n    if (walletConnector) {\n      walletConnector.rejectRequest({\n        id: displayRequest.id,\n        error: { message: \"Failed or Rejected Request\" }\n      });\n    }\n    await this.closeRequest();\n    await this.setState({ walletConnector });\n  };\n\n  public render() {\n    const {\n      peerMeta,\n      scanner,\n      connected,\n      activeIndex,\n      accounts,\n      address,\n      chainId,\n      requests,\n      displayRequest\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SContainer>\n          <Header\n            connected={connected}\n            address={address}\n            chainId={chainId}\n            killSession={this.killSession}\n          />\n          <SContent>\n            <Card maxWidth={400}>\n              <STitle>{`Wallet`}</STitle>\n              {!connected ? (\n                peerMeta && peerMeta.name ? (\n                  <Column>\n                    <PeerMeta peerMeta={peerMeta} />\n                    <SActions>\n                      <Button id=\"button-approve\" onClick={this.approveSession}>{`Approve`}</Button>\n                      <Button id=\"button-reject\" onClick={this.rejectSession}>{`Reject`}</Button>\n                    </SActions>\n                  </Column>\n                ) : (\n                  <Column>\n                    <AccountDetails\n                      address={address}\n                      activeIndex={activeIndex}\n                      chainId={chainId}\n                      accounts={accounts}\n                      updateAddress={this.updateAddress}\n                      updateChain={this.updateChain}\n                    />\n                    <SActionsColumn>\n                      <SButton onClick={this.toggleScanner}>{`Scan`}</SButton>\n                      <p>{\"OR\"}</p>\n                      <SInput\n                        onChange={this.onURIPaste}\n                        placeholder={\"Paste wc: uri\"}\n                        id={\"wc-uri-input\"}\n                      />\n                    </SActionsColumn>\n                  </Column>\n                )\n              ) : !displayRequest ? (\n                <Column>\n                  <AccountDetails\n                    address={address}\n                    activeIndex={activeIndex}\n                    chainId={chainId}\n                    accounts={accounts}\n                    updateAddress={this.updateAddress}\n                    updateChain={this.updateChain}\n                  />\n                  {peerMeta && peerMeta.name && (\n                    <>\n                      <h6>{\"Connected to\"}</h6>\n                      <SConnectedPeer>\n                        <img src={peerMeta.icons[0]} alt={peerMeta.name} />\n                        <div>{peerMeta.name}</div>\n                      </SConnectedPeer>\n                    </>\n                  )}\n                  <h6>{\"Pending Call Requests\"}</h6>\n                  {!!requests.length ? (\n                    requests.map(request => (\n                      <SRequestButton\n                        key={request.id}\n                        onClick={() => this.openRequest(request)}\n                      >\n                        <div>{request.method}</div>\n                      </SRequestButton>\n                    ))\n                  ) : (\n                    <div>\n                      <div>{\"No pending requests\"}</div>\n                    </div>\n                  )}\n                </Column>\n              ) : (\n                <DisplayRequest\n                  displayRequest={displayRequest}\n                  peerMeta={peerMeta}\n                  approveRequest={this.approveRequest}\n                  rejectRequest={this.rejectRequest}\n                />\n              )}\n            </Card>\n          </SContent>\n          {scanner && (\n            <QRCodeScanner\n              onValidate={this.onQRCodeValidate}\n              onScan={this.onQRCodeScan}\n              onError={this.onQRCodeError}\n              onClose={this.onQRCodeClose}\n            />\n          )}\n        </SContainer>\n        <SVersionNumber>{`v${process.env.REACT_APP_VERSION}`} </SVersionNumber>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport App from \"./App\";\nimport { globalStyle } from \"./styles\";\nconst GlobalStyle = createGlobalStyle`\n  ${globalStyle}\n`;\n\ndeclare global {\n  // tslint:disable-next-line\n  interface Window {\n    blockies: any;\n    walletConnector: any;\n  }\n}\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}